---
version: '3'

services:
  pg_db:
    image: postgres:15
    container_name: pg_db
    profiles:
      - system
      - db
    restart: always
    ports:
      - 5431:5432
    networks:
      - db-network
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - ./db/data:/var/lib/postgres/data
      - ./db/config/postgresql.conf:/etc/postgresql/postgresql.conf
      - ./db/config/pg_hba.conf:/etc/postgresql/pg_hba.conf
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql

  api_gateway:
    image: nginx:1.23.3
    container_name: api_gateway
    profiles:
      - system
      - gateway
    restart: unless-stopped
    depends_on:
      - account
      - order
      - authorize
    volumes:
      - ./api_gateway/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "8080:80"
    networks:
      - frontend-network
      - backend-network

  account:
    image: account:1.0
    container_name: account
    profiles:
      - system
      - allservices
      - account
    depends_on:
      - pg_db
    build:
      context: ./services/account/src
      dockerfile: Dockerfile
    # ports:
    #   - 5000:5000
    networks:
      - backend-network
      - db-network

  order:
    image: order:1.0
    container_name: order
    profiles:
      - system
      - allservices
      - order
    depends_on:
      - pg_db
    build:
      context: ./services/order/src
      dockerfile: Dockerfile
    # ports:
    #   - 5001:5000
    networks:
      - backend-network
      - db-network

  authorize:
    image: authorize:1.0
    container_name: authorize
    profiles:
      - system
      - allservices
      - authorize
    depends_on:
      - pg_db
    build:
      context: ./services/authorize/src
      dockerfile: Dockerfile
    # ports:
    #   - 5002:5000
    networks:
      - backend-network
      - db-network

networks:
  frontend-network:
    driver: bridge
  backend-network:
    driver: bridge
  db-network:
    driver: bridge
