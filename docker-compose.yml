---
version: '3'

services:
  api_gateway:
    image: nginx
    container_name: 'api_gateway'
    profiles:
      - gateway
    volumes:
      - ./api_gateway/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "8080:80"
    networks:
      - frontend-network
      - backend-network

  pg_db:
    image: postgres:15
    container_name: pg_db
    profiles:
      - db
    restart: always
    ports:
      - 5431:5432
    networks:
      - db-network
    volumes:
      - ./db/data:/var/lib/postgres/data
      - .db/config/postgresql.conf:/etc/postgresql/postgresql.conf
      - .db/config/pg_hba.conf:/etc/postgresql/pg_hba.conf
      - .db/init.sql:/docker-entrypoint-initdb.d/init.sql

  account:
    image: account:1.0
    container_name: account
    profiles:
      - sv
    depends_on:
      - pg_db
    build:
      context: ./services/account/src
      dockerfile: Dockerfile
    networks:
      - backend-network
      - db-network

  order:
    image: order:1.0
    container_name: order
    profiles:
      - sv
    depends_on:
      - pg_db
    build:
      context: ./services/order/src
      dockerfile: Dockerfile
    networks:
      - backend-network
      - db-network

  license:
    image: license:1.0
    container_name: license
    profiles:
      - sv
    depends_on:
      - pg_db
    build:
      context: ./services/license/src
      dockerfile: Dockerfile
    networks:
      - backend-network
      - db-network


networks:
  frontend-network:
    driver: host
  backend-network:
    driver: bridge
  db-network:
    driver: bridge
